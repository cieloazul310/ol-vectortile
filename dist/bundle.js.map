{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://ol-vectortile/./node_modules/ol/ol.css","webpack://ol-vectortile/./src/style.css","webpack://ol-vectortile/./node_modules/css-loader/dist/runtime/api.js","webpack://ol-vectortile/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://ol-vectortile/./node_modules/ieee754/index.js","webpack://ol-vectortile/./node_modules/pbf/index.js","webpack://ol-vectortile/./node_modules/rbush/rbush.min.js","webpack://ol-vectortile/./src/style.css?7163","webpack://ol-vectortile/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://ol-vectortile/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://ol-vectortile/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://ol-vectortile/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://ol-vectortile/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://ol-vectortile/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://ol-vectortile/./src/layers/vt.ts","webpack://ol-vectortile/./src/styles/index.ts","webpack://ol-vectortile/./src/styles/label.ts","webpack://ol-vectortile/./src/styles/railway.ts","webpack://ol-vectortile/./src/styles/road.ts","webpack://ol-vectortile/./src/utils/handleHash.ts","webpack://ol-vectortile/./node_modules/ol/AssertionError.js","webpack://ol-vectortile/./node_modules/ol/Disposable.js","webpack://ol-vectortile/./node_modules/ol/ImageState.js","webpack://ol-vectortile/./node_modules/ol/CollectionEventType.js","webpack://ol-vectortile/./node_modules/ol/Collection.js","webpack://ol-vectortile/./node_modules/ol/renderer/Map.js","webpack://ol-vectortile/./node_modules/ol/renderer/Composite.js","webpack://ol-vectortile/./node_modules/ol/layer/Group.js","webpack://ol-vectortile/./node_modules/ol/MapEvent.js","webpack://ol-vectortile/./node_modules/ol/MapBrowserEvent.js","webpack://ol-vectortile/./node_modules/ol/MapBrowserEventType.js","webpack://ol-vectortile/./node_modules/ol/pointer/EventType.js","webpack://ol-vectortile/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-vectortile/./node_modules/ol/MapEventType.js","webpack://ol-vectortile/./node_modules/ol/MapProperty.js","webpack://ol-vectortile/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-vectortile/./node_modules/ol/control/Control.js","webpack://ol-vectortile/./node_modules/ol/control/Attribution.js","webpack://ol-vectortile/./node_modules/ol/control/Rotate.js","webpack://ol-vectortile/./node_modules/ol/control/Zoom.js","webpack://ol-vectortile/./node_modules/ol/interaction/Property.js","webpack://ol-vectortile/./node_modules/ol/interaction/Interaction.js","webpack://ol-vectortile/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-vectortile/./node_modules/ol/interaction/Pointer.js","webpack://ol-vectortile/./node_modules/ol/events/condition.js","webpack://ol-vectortile/./node_modules/ol/interaction/DragPan.js","webpack://ol-vectortile/./node_modules/ol/interaction/DragRotate.js","webpack://ol-vectortile/./node_modules/ol/render/Box.js","webpack://ol-vectortile/./node_modules/ol/interaction/DragBox.js","webpack://ol-vectortile/./node_modules/ol/interaction/DragZoom.js","webpack://ol-vectortile/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-vectortile/./node_modules/ol/events/KeyCode.js","webpack://ol-vectortile/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-vectortile/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-vectortile/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-vectortile/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-vectortile/./node_modules/ol/Map.js","webpack://ol-vectortile/./node_modules/ol/control/defaults.js","webpack://ol-vectortile/./node_modules/ol/interaction/defaults.js","webpack://ol-vectortile/./node_modules/ol/Kinetic.js","webpack://ol-vectortile/./node_modules/ol/TileQueue.js","webpack://ol-vectortile/./node_modules/ol/Object.js","webpack://ol-vectortile/./node_modules/ol/ObjectEventType.js","webpack://ol-vectortile/./node_modules/ol/Observable.js","webpack://ol-vectortile/./node_modules/ol/Tile.js","webpack://ol-vectortile/./node_modules/ol/TileRange.js","webpack://ol-vectortile/./node_modules/ol/TileState.js","webpack://ol-vectortile/./node_modules/ol/ViewProperty.js","webpack://ol-vectortile/./node_modules/ol/centerconstraint.js","webpack://ol-vectortile/./node_modules/ol/resolutionconstraint.js","webpack://ol-vectortile/./node_modules/ol/View.js","webpack://ol-vectortile/./node_modules/ol/ViewHint.js","webpack://ol-vectortile/./node_modules/ol/array.js","webpack://ol-vectortile/./node_modules/ol/asserts.js","webpack://ol-vectortile/./node_modules/ol/color.js","webpack://ol-vectortile/./node_modules/ol/colorlike.js","webpack://ol-vectortile/./node_modules/ol/coordinate.js","webpack://ol-vectortile/./node_modules/ol/css.js","webpack://ol-vectortile/./node_modules/ol/dom.js","webpack://ol-vectortile/./node_modules/ol/easing.js","webpack://ol-vectortile/./node_modules/ol/events.js","webpack://ol-vectortile/./node_modules/ol/events/Event.js","webpack://ol-vectortile/./node_modules/ol/events/EventType.js","webpack://ol-vectortile/./node_modules/ol/events/Target.js","webpack://ol-vectortile/./node_modules/ol/extent.js","webpack://ol-vectortile/./node_modules/ol/extent/Relationship.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-vectortile/./node_modules/ol/geom/LineString.js","webpack://ol-vectortile/./node_modules/ol/geom/MultiLineString.js","webpack://ol-vectortile/./node_modules/ol/geom/MultiPoint.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/center.js","webpack://ol-vectortile/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-vectortile/./node_modules/ol/render/Feature.js","webpack://ol-vectortile/./node_modules/ol/format/MVT.js","webpack://ol-vectortile/./node_modules/ol/format/Feature.js","webpack://ol-vectortile/./node_modules/ol/functions.js","webpack://ol-vectortile/./node_modules/ol/geom/Point.js","webpack://ol-vectortile/./node_modules/ol/geom/LinearRing.js","webpack://ol-vectortile/./node_modules/ol/geom/Polygon.js","webpack://ol-vectortile/./node_modules/ol/geom/Geometry.js","webpack://ol-vectortile/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/area.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/closest.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/contains.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/deflate.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/inflate.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/length.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/reverse.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/orient.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/segments.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/simplify.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/transform.js","webpack://ol-vectortile/./node_modules/ol/has.js","webpack://ol-vectortile/./node_modules/ol/layer/Base.js","webpack://ol-vectortile/./node_modules/ol/layer/Layer.js","webpack://ol-vectortile/./node_modules/ol/layer/Property.js","webpack://ol-vectortile/./node_modules/ol/Image.js","webpack://ol-vectortile/./node_modules/ol/style/IconImage.js","webpack://ol-vectortile/./node_modules/ol/style/Icon.js","webpack://ol-vectortile/./node_modules/ol/style/flat.js","webpack://ol-vectortile/./node_modules/ol/layer/BaseVector.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-vectortile/./node_modules/ol/render/VectorContext.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/Builder.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-vectortile/./node_modules/ol/geom/flat/textpath.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/Executor.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-vectortile/./node_modules/ol/renderer/Layer.js","webpack://ol-vectortile/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-vectortile/./node_modules/ol/ImageTile.js","webpack://ol-vectortile/./node_modules/ol/reproj.js","webpack://ol-vectortile/./node_modules/ol/reproj/Tile.js","webpack://ol-vectortile/./node_modules/ol/reproj/common.js","webpack://ol-vectortile/./node_modules/ol/reproj/Triangulation.js","webpack://ol-vectortile/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-vectortile/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-vectortile/./node_modules/ol/renderer/vector.js","webpack://ol-vectortile/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-vectortile/./node_modules/ol/layer/TileProperty.js","webpack://ol-vectortile/./node_modules/ol/layer/VectorTile.js","webpack://ol-vectortile/./node_modules/ol/math.js","webpack://ol-vectortile/./node_modules/ol/obj.js","webpack://ol-vectortile/./node_modules/ol/proj/epsg3857.js","webpack://ol-vectortile/./node_modules/ol/proj/epsg4326.js","webpack://ol-vectortile/./node_modules/ol/proj/projections.js","webpack://ol-vectortile/./node_modules/ol/proj/transforms.js","webpack://ol-vectortile/./node_modules/ol/sphere.js","webpack://ol-vectortile/./node_modules/ol/proj.js","webpack://ol-vectortile/./node_modules/ol/proj/Projection.js","webpack://ol-vectortile/./node_modules/ol/proj/Units.js","webpack://ol-vectortile/./node_modules/ol/render/Event.js","webpack://ol-vectortile/./node_modules/ol/render/EventType.js","webpack://ol-vectortile/./node_modules/ol/render/canvas.js","webpack://ol-vectortile/./node_modules/ol/rotationconstraint.js","webpack://ol-vectortile/./node_modules/ol/size.js","webpack://ol-vectortile/./node_modules/ol/VectorTile.js","webpack://ol-vectortile/./node_modules/ol/tilecoord.js","webpack://ol-vectortile/./node_modules/ol/TileCache.js","webpack://ol-vectortile/./node_modules/ol/structs/LRUCache.js","webpack://ol-vectortile/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-vectortile/./node_modules/ol/source/Source.js","webpack://ol-vectortile/./node_modules/ol/tilegrid.js","webpack://ol-vectortile/./node_modules/ol/source/Tile.js","webpack://ol-vectortile/./node_modules/ol/tileurlfunction.js","webpack://ol-vectortile/./node_modules/ol/source/UrlTile.js","webpack://ol-vectortile/./node_modules/ol/source/TileEventType.js","webpack://ol-vectortile/./node_modules/ol/VectorRenderTile.js","webpack://ol-vectortile/./node_modules/ol/source/VectorTile.js","webpack://ol-vectortile/./node_modules/ol/featureloader.js","webpack://ol-vectortile/./node_modules/ol/style/Circle.js","webpack://ol-vectortile/./node_modules/ol/style/Fill.js","webpack://ol-vectortile/./node_modules/ol/style/IconImageCache.js","webpack://ol-vectortile/./node_modules/ol/style/Image.js","webpack://ol-vectortile/./node_modules/ol/style/RegularShape.js","webpack://ol-vectortile/./node_modules/ol/style/Stroke.js","webpack://ol-vectortile/./node_modules/ol/style/Style.js","webpack://ol-vectortile/./node_modules/ol/style/Text.js","webpack://ol-vectortile/./node_modules/ol/tilegrid/common.js","webpack://ol-vectortile/./node_modules/ol/transform.js","webpack://ol-vectortile/./node_modules/ol/util.js","webpack://ol-vectortile/webpack/bootstrap","webpack://ol-vectortile/webpack/runtime/compat get default export","webpack://ol-vectortile/webpack/runtime/define property getters","webpack://ol-vectortile/webpack/runtime/hasOwnProperty shorthand","webpack://ol-vectortile/webpack/runtime/make namespace object","webpack://ol-vectortile/webpack/runtime/nonce","webpack://ol-vectortile/./src/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root,\\n:host {\\n  --ol-background-color: white;\\n  --ol-accent-background-color: #F5F5F5;\\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\\n  --ol-foreground-color: #333333;\\n  --ol-subtle-foreground-color: #666666;\\n  --ol-brand-color: #00AAFF;\\n}\\n\\n.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 1.5px solid var(--ol-background-color);\\n  background-color: var(--ol-partial-background-color);\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: var(--ol-partial-background-color);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line-inner {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  border-top: none;\\n  color: var(--ol-foreground-color);\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n\\n.ol-scale-bar-inner {\\n  display: flex;\\n}\\n\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: var(--ol-foreground-color);\\n  float: right;\\n  z-index: 10;\\n}\\n\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 10px;\\n  z-index: 11;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 12px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-index: 9;\\n  box-sizing: border-box;\\n  border: 1px solid var(--ol-foreground-color);\\n}\\n\\n.ol-scale-singlebar-even {\\n  background-color: var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-scale-singlebar-odd {\\n  background-color: var(--ol-background-color);\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n\\n.ol-viewport,\\n.ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.ol-viewport canvas {\\n  all: unset;\\n}\\n\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.ol-control {\\n  position: absolute;\\n  background-color: var(--ol-subtle-background-color);\\n  border-radius: 4px;\\n}\\n\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: var(--ol-subtle-foreground-color);\\n  font-weight: bold;\\n  text-decoration: none;\\n  font-size: inherit;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: var(--ol-background-color);\\n  border: none;\\n  border-radius: 2px;\\n}\\n\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  will-change: transform;\\n}\\n\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  outline: 1px solid var(--ol-subtle-foreground-color);\\n  color: var(--ol-foreground-color);\\n}\\n\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n  display: flex;\\n  flex-flow: row-reverse;\\n  align-items: center;\\n}\\n\\n.ol-attribution a {\\n  color: var(--ol-subtle-foreground-color);\\n  text-decoration: none;\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 1px .5em;\\n  color: var(--ol-foreground-color);\\n  text-shadow: 0 0 2px var(--ol-background-color);\\n  font-size: 12px;\\n}\\n\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n}\\n\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n\\n.ol-attribution button {\\n  flex-shrink: 0;\\n}\\n\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n\\n.ol-attribution:not(.ol-collapsed) {\\n  background: var(--ol-partial-background-color);\\n}\\n\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n}\\n\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: block;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  height: 150px;\\n  width: 150px;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) button {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n}\\n\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: var(--ol-subtle-background-color);\\n}\\n\\n.ol-overviewmap-box {\\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/ol/ol.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root,\\n:host {\\n  --ol-background-color: white;\\n  --ol-accent-background-color: #F5F5F5;\\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\\n  --ol-foreground-color: #333333;\\n  --ol-subtle-foreground-color: #666666;\\n  --ol-brand-color: #00AAFF;\\n}\\n\\n.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 1.5px solid var(--ol-background-color);\\n  background-color: var(--ol-partial-background-color);\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: var(--ol-partial-background-color);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line-inner {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  border-top: none;\\n  color: var(--ol-foreground-color);\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n\\n.ol-scale-bar-inner {\\n  display: flex;\\n}\\n\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: var(--ol-foreground-color);\\n  float: right;\\n  z-index: 10;\\n}\\n\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 10px;\\n  z-index: 11;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 12px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-index: 9;\\n  box-sizing: border-box;\\n  border: 1px solid var(--ol-foreground-color);\\n}\\n\\n.ol-scale-singlebar-even {\\n  background-color: var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-scale-singlebar-odd {\\n  background-color: var(--ol-background-color);\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n\\n.ol-viewport,\\n.ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.ol-viewport canvas {\\n  all: unset;\\n}\\n\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.ol-control {\\n  position: absolute;\\n  background-color: var(--ol-subtle-background-color);\\n  border-radius: 4px;\\n}\\n\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: var(--ol-subtle-foreground-color);\\n  font-weight: bold;\\n  text-decoration: none;\\n  font-size: inherit;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: var(--ol-background-color);\\n  border: none;\\n  border-radius: 2px;\\n}\\n\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  will-change: transform;\\n}\\n\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  outline: 1px solid var(--ol-subtle-foreground-color);\\n  color: var(--ol-foreground-color);\\n}\\n\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n  display: flex;\\n  flex-flow: row-reverse;\\n  align-items: center;\\n}\\n\\n.ol-attribution a {\\n  color: var(--ol-subtle-foreground-color);\\n  text-decoration: none;\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 1px .5em;\\n  color: var(--ol-foreground-color);\\n  text-shadow: 0 0 2px var(--ol-background-color);\\n  font-size: 12px;\\n}\\n\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n}\\n\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n\\n.ol-attribution button {\\n  flex-shrink: 0;\\n}\\n\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n\\n.ol-attribution:not(.ol-collapsed) {\\n  background: var(--ol-partial-background-color);\\n}\\n\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n}\\n\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: block;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  height: 150px;\\n  width: 150px;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) button {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n}\\n\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: var(--ol-subtle-background-color);\\n}\\n\\n.ol-overviewmap-box {\\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/ol/ol.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.map {\\n  width: 100%;\\n  height: 100%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAEA;;EAEE,SAAS;EACT,UAAU;EACV,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd\",\"sourcesContent\":[\"@import \\\"~ol/ol.css\\\";\\n\\nhtml,\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.map {\\n  width: 100%;\\n  height: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","import VectorTileLayer from 'ol/layer/VectorTile';\nimport VectorTileSource from 'ol/source/VectorTile';\nimport MVTFormat from 'ol/format/MVT';\nimport vtstyle from '../styles';\n\nconst vt = new VectorTileLayer({\n  source: new VectorTileSource({\n    format: new MVTFormat({\n      layers: [\n        'river',\n        'coastline',\n        'lake',\n        'waterarea',\n        'road',\n        'railway',\n        'label',\n        'contour',\n        'building',\n        'boundary',\n        'searoute',\n      ],\n    }),\n    url: 'https://cyberjapandata.gsi.go.jp/xyz/experimental_bvmap/{z}/{x}/{y}.pbf',\n    attributions:\n      '<a href=\"https://github.com/gsi-cyberjapan/gsimaps-vector-experiment\" target=\"_blank\" rel=”noopener noreferrer”>国土地理院</a>',\n  }),\n  declutter: true,\n  style: vtstyle,\n});\n\nexport default vt;\n","import Style from 'ol/style/Style';\nimport Stroke from 'ol/style/Stroke';\nimport Fill from 'ol/style/Fill';\nimport type { FeatureLike } from 'ol/Feature';\n\nimport roadStyle from './road';\nimport railwayStyle from './railway';\nimport labelStyle from './label';\n\nexport default function vtStyle(feature: FeatureLike, resolution: number) {\n  const properties = feature.getProperties();\n  if (properties.layer === 'road') {\n    return roadStyle(feature, resolution);\n  } else if (properties.layer === 'railway') {\n    return railwayStyle(feature, resolution);\n  } else if (properties.layer === 'coastline') {\n    return new Style({\n      stroke: new Stroke({\n        color: '#bbbbd7',\n      }),\n    });\n  } else if (properties.layer === 'label') {\n    return labelStyle(feature);\n  } else if (properties.layer === 'contour') {\n    return new Style({\n      stroke: new Stroke({\n        color: resolution > 19.11 ? '#e7dddd' : '#f7eeee',\n        width: 1,\n      }),\n    });\n  } else if (properties.layer === 'building') {\n    return new Style({\n      fill: new Fill({ color: '#eee' }),\n    });\n  } else if (properties.layer === 'boundary') {\n    return new Style({\n      stroke: new Stroke({ color: '#bbd7bb', lineDash: [2, 2] }),\n    });\n  } else if (properties.layer === 'searoute') {\n    return new Style({\n      stroke: new Stroke({ color: '#bbbbd7', lineDash: [4, 4] }),\n    });\n  }\n\n  return new Style({\n    fill: new Fill({\n      color: '#dddde7',\n    }),\n  });\n}\n","import Style from 'ol/style/Style';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Text from 'ol/style/Text';\nimport type { FeatureLike } from 'ol/Feature';\n\nfunction textAlign(align: string): CanvasTextAlign {\n  if (align === 'L') return 'left';\n  return align === 'R' ? 'right' : 'center';\n}\nfunction textBaseline(baseline: string): CanvasTextBaseline {\n  if (baseline === 'T') return 'top';\n  return baseline === 'B' ? 'bottom' : 'middle';\n}\n\nfunction textPos(\n  properties: Record<string, string>\n): [CanvasTextAlign, CanvasTextBaseline] {\n  if (!properties || !('dspPos' in properties)) return ['center', 'middle'];\n  const { dspPos } = properties;\n  const align = dspPos.slice(0, 1);\n  const baseline = dspPos.slice(1, 2);\n\n  return [textAlign(align), textBaseline(baseline)];\n}\n\nexport default function labelStyle(feature: FeatureLike): Style | Style[] {\n  const properties = feature.getProperties();\n  const pos = textPos(properties);\n  return new Style({\n    text: new Text({\n      text: properties.knj,\n      font: 'bold small sans-serif',\n      fill: new Fill({ color: '#777' }),\n      stroke: new Stroke({ color: '#fff', width: 2 }),\n      textAlign: pos[0],\n      textBaseline: pos[1],\n    }),\n    zIndex: 10,\n  });\n}\n","import Style from 'ol/style/Style';\nimport Stroke from 'ol/style/Stroke';\nimport type { FeatureLike } from 'ol/Feature';\n\nexport default function railroadStyle(\n  feature: FeatureLike,\n  resolution: number\n) {\n  const { snglDbl, rtCode10 } = feature.getProperties();\n  if (snglDbl === 0) return null;\n  if (snglDbl === 4) {\n    return new Style({\n      stroke: new Stroke({\n        width: 4,\n        color: '#666',\n      }),\n      zIndex: 10,\n    });\n  } else {\n    const width =\n      resolution > 50\n        ? 1\n        : rtCode10 === '2'\n        ? 4\n        : snglDbl === 1\n        ? 2\n        : snglDbl === 2\n        ? 3\n        : 1;\n    const color = rtCode10 === '2' ? '#666' : '#666';\n    return new Style({\n      stroke: new Stroke({\n        width,\n        color,\n      }),\n      zIndex: 8,\n    });\n  }\n}\n","import Style from 'ol/style/Style';\nimport Stroke from 'ol/style/Stroke';\nimport type { FeatureLike } from 'ol/Feature';\n\nexport default function roadStyle(feature: FeatureLike, resolution: number) {\n  const { rnkWidth, rdCtg, ftCode } = feature.getProperties();\n  if (resolution < 1.19 && ftCode > 2700) return null;\n\n  const width =\n    resolution > 50\n      ? 1\n      : rnkWidth === 0\n      ? 0.5\n      : rnkWidth === 1\n      ? 1\n      : rnkWidth === 2\n      ? 2\n      : rnkWidth === 3\n      ? 3\n      : rnkWidth === 4\n      ? 3\n      : 0;\n  const color =\n    resolution < 1.19\n      ? '#ccc'\n      : rdCtg === 0\n      ? '#bbb'\n      : rdCtg === 1\n      ? '#ccc'\n      : rdCtg === 2\n      ? '#ddd'\n      : rdCtg === 3\n      ? '#aaa'\n      : '#ddd';\n  const zIndex =\n    rdCtg === 0 ? 9 : rdCtg === 1 ? 8 : rdCtg === 2 ? 2 : rdCtg === 3 ? 10 : 1;\n\n  return [\n    new Style({\n      stroke: new Stroke({\n        width,\n        color,\n      }),\n      zIndex,\n    }),\n  ];\n}\n","import Map from 'ol/Map';\nimport { fromLonLat, toLonLat } from 'ol/proj';\n\ntype parseHashResult = {\n  zoom: number | null;\n  center: number[] | null;\n  rotation: number | null;\n};\n\nexport function parseHash(window: Window): parseHashResult {\n  if (window.location.hash !== '') {\n    // try to restore center, zoom-level and rotation from the URL\n    const hash = window.location.hash.replace('#map=', '');\n    const parts = hash.split('/');\n\n    if (parts.length === 4) {\n      const zoom = parseFloat(parts[0]);\n      const center = fromLonLat([parseFloat(parts[1]), parseFloat(parts[2])]);\n      const rotation = parseFloat(parts[3]);\n\n      return { zoom, center, rotation };\n    } else {\n      return { zoom: null, center: null, rotation: null };\n    }\n  }\n  return { zoom: null, center: null, rotation: null };\n}\n\nexport function setPermalink(map: Map) {\n  map.on('moveend', () => {\n    const view = map.getView();\n    const zoom = view.getZoom();\n    const center = toLonLat(view.getCenter());\n    const rotation = view.getRotation();\n    const hash =\n      '#map=' +\n      zoom.toFixed(2) +\n      '/' +\n      center[0].toFixed(4) +\n      '/' +\n      center[1].toFixed(4) +\n      '/' +\n      rotation.toFixed(4);\n    const state = { zoom, center, rotation };\n    window.history.pushState(state, 'map', hash);\n  });\n}\n\nexport function setPopstate(map: Map, window: Window) {\n  window.addEventListener('popstate', (event) => {\n    if (event.state === null) {\n      return;\n    }\n    map.getView().setCenter(fromLonLat(event.state.center));\n    map.getView().setZoom(event.state.zoom);\n    map.getView().setRotation(event.state.rotation);\n  });\n}\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      function (resolve, reject) {\n        const layer =\n          /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n            this.getLayer()\n          );\n        const layerUid = getUid(layer);\n        const source = layer.getSource();\n        const projection = this.renderedProjection;\n        const projectionExtent = projection.getExtent();\n        const resolution = this.renderedResolution;\n        const tileGrid = source.getTileGridForProjection(projection);\n        const coordinate = applyTransform(\n          this.renderedPixelToCoordinateTransform_,\n          pixel.slice()\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n          coordinate,\n          resolution\n        );\n        let tile;\n        for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n          if (\n            tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n          ) {\n            tile = this.renderedTiles[i];\n            if (tile.getState() === TileState.LOADED) {\n              const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n              if (\n                source.getWrapX() &&\n                projection.canWrapX() &&\n                !containsExtent(projectionExtent, extent)\n              ) {\n                wrapX(coordinate, projection);\n              }\n              break;\n            }\n            tile = undefined;\n          }\n        }\n        if (!tile || tile.loadingSourceTiles > 0) {\n          resolve([]);\n          return;\n        }\n        const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        const corner = getTopLeft(extent);\n        const tilePixel = [\n          (coordinate[0] - corner[0]) / resolution,\n          (corner[1] - coordinate[1]) / resolution,\n        ];\n        const features = tile\n          .getSourceTiles()\n          .reduce(function (accumulator, sourceTile) {\n            return accumulator.concat(sourceTile.getFeatures());\n          }, []);\n        let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n        if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n          const tileSize = toSize(\n            tileGrid.getTileSize(\n              tileGrid.getZForResolution(resolution, source.zDirection)\n            )\n          );\n          const rotation = this.renderedRotation_;\n          const transforms = [\n            this.getRenderTransform(\n              tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n              resolution,\n              0,\n              HIT_DETECT_RESOLUTION,\n              tileSize[0] * HIT_DETECT_RESOLUTION,\n              tileSize[1] * HIT_DETECT_RESOLUTION,\n              0\n            ),\n          ];\n          hitDetectionImageData = createHitDetectionImageData(\n            tileSize,\n            transforms,\n            features,\n            layer.getStyleFunction(),\n            tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n            tile.getReplayState(layer).renderedResolution,\n            rotation\n          );\n          tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n        }\n        resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        extent,\n        sourceZ,\n        function (sourceTileCoord) {\n          empty =\n            empty &&\n            !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n        }.bind(this)\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","import './style.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { fromLonLat } from 'ol/proj';\nimport vt from './layers/vt';\n\nimport { parseHash, setPermalink, setPopstate } from './utils/handleHash';\n\nconst { zoom, center, rotation } = parseHash(window);\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: center || fromLonLat([140.46, 36.37]),\n    zoom: zoom || 12,\n    rotation: rotation || 0,\n  }),\n  layers: [vt],\n});\n\nsetPermalink(map);\nsetPopstate(map, window);\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","i","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","all","_all","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","options","styleTagTransform","setAttributes","domAPI","insertStyleElement","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","css","sourceMap","references","updater","addElementStyle","byIndex","api","update","newObj","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","vt","format","layers","url","attributions","declutter","feature","resolution","properties","getProperties","stroke","color","width","fill","lineDash","textAlign","align","textBaseline","baseline","dspPos","textPos","text","knj","font","zIndex","snglDbl","rtCode10","rnkWidth","rdCtg","ftCode","location","hash","parts","replace","split","zoom","parseFloat","center","fromLonLat","rotation","on","view","getView","getZoom","toLonLat","getCenter","getRotation","toFixed","state","history","pushState","addEventListener","event","setCenter","setZoom","setRotation","messages","AssertionError","constructor","code","message","super","name","disposed","dispose","disposeInternal","IDLE","LOADING","LOADED","ERROR","EMPTY","Property","CollectionEvent","Event","Collection","array","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","extend","forEach","getArray","get","insertAt","elem","dispatchEvent","CollectionEventType","removeAt","prev","setAt","except","MapRenderer","Disposable","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","getExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","getSource","coordinates","getWrapX","bind","order","distanceSq","some","hasFeatureAtCoordinate","getMap","renderFrame","scheduleExpireIconCache","postRenderFunctions","expireIconCache","Map","fontChangeListenerKey_","ObjectEventType","redrawText","element_","position","className","container","getViewport","insertBefore","children_","renderedVisible_","hasListener","display","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","GroupEvent","LayerGroup","Base","baseOptions","Object","assign","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","setLayers","handleLayerChange_","changed","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","key","collection","currentLayers","getLayersArray","getLayerStatesArray","dest","states","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","extent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","property","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","DROP","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","jj","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","PI","animate","easing","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","getResolution","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","charCode","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","lastIndex","firstIndex","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","toUserCoordinate","getProjection","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","lowOnFrameBudget","time","resolveConstraints","Composite","defaultView","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","usedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","setLayerGroup","oldLayerGroup","setSize","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","console","warn","parseInt","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","w","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","smoothResolutionConstraint","projExtent","capped","z","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","enableRotation","constrainRotation","ANIMATING","INTERACTING","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","found","linearFindNearest","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assert","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromString","cache","cacheSize","g","exec","el","body","rgb","fromNamed","hasAlpha","substr","startsWith","Number","normalize","fromStringInternal_","asArray","round","asColorLike","coordinate1","coordinate2","wrapX","worldsAway","getWorldsAway","sourceExtentWidth","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","SimpleGeometry","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","closestPointXY","closestPoint","minSquaredDistance","forEachSegment","getCoordinateAtM","getCoordinates","inflate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","intersectsExtent","setLayout","deflate","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","point","multiPoint","squaredDistance","getPoint","getPoints","points","linearRingss","endss","flatCenters","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","right","orient","getEndss","getFlatInteriorPoints","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","tmpTransform","RenderFeature","styleFunction","extent_","id_","type_","flatCoordinates_","flatMidpoints_","properties_","getFlatInteriorPoint","flatCenter","getSimplifiedGeometry","simplifyTransformed","getStyleFunction","pixelExtent","projectedExtent","getWorldExtent","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","getUnits","setWorldExtent","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","Projection","units","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","ctor","setGeometryName","transformed","equivalent","transformGeometryWithOptions","setGeometry","setId","pbfLayers","pbfLayer","setExtent","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","Point","computeExtent","LinearRing","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","coord","getClosestPoint","intersectsCoordinate","sx","sy","simplify","translate","destination","sourceProj","inCoordinates","outCoordinates","getTransform","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","nesting","getLayoutForStride","twiceArea","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","Image","PASSIVE_EVENT_LISTENERS","defineProperty","error","BaseLayer","background_","background","className_","state_","getBackground","getClassName","getZIndex","getOpacity","getVisible","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","Promise","resolve","getData","prepareFrame","getMapInternal","arrayLayerState","createRenderer","inView","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","EventType","src","catch","taintedTestContext","IconImage","crossOrigin","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","isTainted_","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","getImage","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","Icon","rotateWithView","displacement","declutterMode","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","iconImage","offset_","offsetOrigin_","offsetOrigin","origin_","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getAnchor","getScaleArray","setAnchor","getColor","getImageSize","getOrigin","iconImageSize","listenImageChange","unlistenImageChange","toStyle","flatStyle","Style","getFill","getStroke","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDashOffset","miterLimit","Text","maxAngle","placement","justify","backgroundFill","backgroundStroke","iconSrc","iconImg","shapePoints","RegularShape","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","createDefaultStyle","styles","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","sharedData","origin","drawFlatCoordinates_","lastStroke","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatEnd","flatOffset","oo","range","drawChars_","strokeKey","textKey","fillKey","strokeWidth","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","reduce","widths","heights","lineWidths","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","save","restore","setLineDash","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","cc","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","containerReused","pixelContext_","col","row","createPixelContext","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","ImageTile","tileLoadFunction","tileLoadFunction_","setImage","getBlankImage","naturalWidth","naturalHeight","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","getPointResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","gutter","getTileFunction","errorThreshold","renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","triangulation","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","leftToLoad","sourceListenKey","unlistenSources_","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","layerExtent","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","canExpireCache","postRenderFunction","expireCache","preload","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","setTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","executorGroup","reject","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","accumulator","animatingOrInteracting_","transforms","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","setColor","setText","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","getTileRenderTransform","worldOffset","renderMode","replayTypes","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","decimals","object","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","global","worldExtent","cosh","PROJECTIONS","fromEPSG4326","input","output","toEPSG4326","atan","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProjections","projections","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","destProj","lonLat","lon","equalUnits","sourceProjection","destinationProjection","transformFunc","transformExtent","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","destProjection","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","addCommon","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","RenderEvent","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","curr","getTextDimensions","baseStyle","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","executeLabelInstructions","createSnapToN","createSnapToZero","hasArea","toSize","VectorTile","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","getKeyZXY","fromKey","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","resolutionsFromExtent","extentFromProjection","half","TileSourceEvent","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","createForExtent","createForProjection","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop","expandUrl","templates","tileUrlFunctions","createFromTileUrlFunctions","createFromTemplates","VectorRenderTile","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","xyzOptions","gridOptions","createXYZ","defaultLoadFunction","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","candidate","usedSourceTiles","cacheKey","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","empty","newTile","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","loadFeaturesXhr","CircleStyle","getRadius","setRadius","radius_","shared","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","setScale","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createEditingStyle","white","blue","font_","textAlign_","justify_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","setFromArray","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__esModule","definition","enumerable","prop","Symbol","toStringTag","nc","parseHash","setPermalink","setPopstate"],"sourceRoot":""}